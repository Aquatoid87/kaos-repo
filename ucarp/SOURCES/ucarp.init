#!/bin/bash

# ucarp        Startup script for ucarp service

# chkconfig: - 85 15
# processname: ucarp
# config: /etc/sysconfig/ucarp
# pidfile: /var/run/ucarp.pid
# description: Common Address Redundancy Protocol (CARP)

### BEGIN INIT INFO
# Provides: ucarp
# Required-Start: $local_fs $remote_fs $network
# Required-Stop: $local_fs $remote_fs $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop ucarp
### END INIT INFO

###############################################################################

source /etc/init.d/kaosv

###############################################################################

kv[prog_name]="ucarp"
kv[search_pattern]="ucarp"

kv.readSysconfig

binary=${BINARY:-/usr/sbin/ucarp}
conf_dir=${CONFDIR:-/etc/ucarp}

###############################################################################

kv.addCommandVars "stop" "force"

kv.addHandler "start" "startServiceHandler"
kv.addHandler "stop"  "stopServiceHandler"

###############################################################################

prepare() {
  local has_errors=""

  [[ ! -f $binary ]] && has_errors=true && kv.error "Error! File <$binary> is not exist"
  [[ ! -x $binary ]] && has_errors=true && kv.error "Error! File <$binary> is not executable"

  [[ ! -f $conf_dir ]] && has_errors=true && kv.error "Error! Directory <$conf_dir> is not exist"
  [[ ! -r $conf_dir ]] && has_errors=true && kv.error "Error! Directory <$conf_dir> is not readable"

  [[ $has_errors ]] && kv.exit $ACTION_ERROR
}

startServiceHandler() {
  kv.run "$binary $conf_file"

  [[ $? -ne $ACTION_OK ]] && return $ACTION_ERROR

  kv.getStartStatus

  return $?
}

stopServiceHandler() {
  local pid=`kv.getPid`

  kv.sendSignal "$SIGNAL_TERM"

  if kv.getStopStatus ; then
    return $ACTION_OK
  else
    if [[ -n "$1" ]] ; then
      kv.killProcess $pid 
    fi

    return $ACTION_ERROR
  fi
}

###############################################################################

prepare

kv.go $@
