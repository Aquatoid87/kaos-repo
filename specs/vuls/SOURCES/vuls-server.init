#!/bin/bash

# ovald-server  init file for starting up the VULS server
#
# chkconfig:   - 20 80
# description: Starts and stops the VULS server

###############################################################################

source /etc/init.d/kaosv

###############################################################################

kv[prog_name]="vuls-server"

kv.readSysconfig

binary="/usr/bin/vuls"
ip="${IP:-127.0.0.1}"
port="${PORT:-5515}"
config="${CONFIG:-/etc/vuls.toml}"
log_dir="${LOG_DIR:-/var/log/vuls}"
proxy_url="$PROXY_URL"
cvss_over="$CVSS_OVER"
debug="$DEBUG"

kv[user]="${USER:-vuls}"

kv[search_pattern]="$binary server"

###############################################################################

kv.addHandler "start" "startServiceHandler"
kv.addHandler "start" "preStartServiceHandler" "pre"
kv.addHandler "stop"  "stopServiceHandler"

kv.disableOutputRedirect "start" "pre"

###############################################################################

preStartServiceHandler() {
  if [[ ! -e "${log_dir}" ]] ; then
    mkdir -p "${log_dir}" &>/dev/null
  fi

  chown "${kv[user]}:" "${kv[log]}"

  local has_errors=""

  [[ ! -e "$binary" ]] && has_errors=true && kv.error "vuls binary is not found"
  [[ ! -x "$binary" ]] && has_errors=true && kv.error "vuls must be executable file"

  [[ -n "$has_errors" ]] && kv.exit $ACTION_ERROR

  return $ACTION_OK
}

startServiceHandler() {
  local opts="-config=${config} -listen=${ip}:${port} -log-dir=${log_dir}"

  if [[ -n "$cvss_over" ]] ; then
    opts="$opts -cvss-over=${cvss_over}"
  fi

  if [[ -n "$proxy_url" ]] ; then
    opts="$opts -http-proxy=${proxy_url}"
  fi

  if [[ -n "$debug" ]] ; then
    opts="$opts -debug"
  fi

  kv.daemonize "$binary" "server" $opts

  [[ $? -ne 0 ]] && return $ACTION_ERROR

  if kv.getStartStatus ; then
    return $ACTION_OK
  fi

  return $ACTION_ERROR
}

stopServiceHandler() {
  kv.sendSignal "$SIGNAL_TERM"

  if kv.getStopStatus ; then
    return $ACTION_OK
  fi

  return $ACTION_ERROR
}

###############################################################################

kv.go "$@"
